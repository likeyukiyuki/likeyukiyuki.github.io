<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuki</title>
  
  
  <link href="http://likeyukiyuki.github.io/atom.xml" rel="self"/>
  
  <link href="http://likeyukiyuki.github.io/"/>
  <updated>2023-09-04T14:21:43.273Z</updated>
  <id>http://likeyukiyuki.github.io/</id>
  
  <author>
    <name>yuki</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用vue+python制作简易番茄钟</title>
    <link href="http://likeyukiyuki.github.io/2023/09/04/%E6%B5%8B%E8%AF%95/"/>
    <id>http://likeyukiyuki.github.io/2023/09/04/%E6%B5%8B%E8%AF%95/</id>
    <published>2023-09-04T14:02:43.070Z</published>
    <updated>2023-09-04T14:21:43.273Z</updated>
    
    <content type="html"><![CDATA[<h5 id="日期-2023-09-01-02-51-26"><a class="header-anchor" href="#日期-2023-09-01-02-51-26">¶</a>日期: 2023-09-01 02:51:26</h5><h3 id="网页整体如下："><a class="header-anchor" href="#网页整体如下：">¶</a>网页整体如下：</h3><p><img src="/2023/09/04/%E6%B5%8B%E8%AF%95/zt.png" alt></p><h4 id="前端vue所实现的功能："><a class="header-anchor" href="#前端vue所实现的功能：">¶</a>前端vue所实现的功能：</h4><h4 id="1-实现计时器功能，即一轮30分钟的倒计时，前25分钟工作，后五分钟休息。"><a class="header-anchor" href="#1-实现计时器功能，即一轮30分钟的倒计时，前25分钟工作，后五分钟休息。">¶</a>1.实现计时器功能，即一轮30分钟的倒计时，前25分钟工作，后五分钟休息。</h4><blockquote><p>参考代码如下（写在script标签内的哦）：</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一些需要用到的变量</span></span><br><span class="line"><span class="keyword">const</span> seconds = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">const</span> minutes = <span class="title function_">ref</span>(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">const</span> state = <span class="title function_">ref</span>(<span class="title class_">State</span>.<span class="property">Init</span>);</span><br><span class="line"><span class="keyword">const</span> is_pause = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="attr">timer</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">var</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> msg=<span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义三种不同的状态</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">State</span> &#123;</span><br><span class="line">  <span class="title class_">Init</span>, <span class="comment">// 初始</span></span><br><span class="line">  <span class="title class_">Working</span>, <span class="comment">// 工作</span></span><br><span class="line">  <span class="title class_">Resting</span> <span class="comment">// 休息</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关于工作状态的设置</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">message</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (state.<span class="property">value</span> === <span class="title class_">State</span>.<span class="property">Init</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;还未启动&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.<span class="property">value</span> === <span class="title class_">State</span>.<span class="property">Working</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;工作&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.<span class="property">value</span> === <span class="title class_">State</span>.<span class="property">Resting</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;休息&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//根据当前时间数值返回不同状态</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clock</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (minutes.<span class="property">value</span> &gt; <span class="number">5</span> &amp;&amp; minutes.<span class="property">value</span> &lt; <span class="number">30</span>) &#123;</span><br><span class="line">    state.<span class="property">value</span> = <span class="title class_">State</span>.<span class="property">Working</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    state.<span class="property">value</span> = <span class="title class_">State</span>.<span class="property">Resting</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="预期实现效果如下图所示"><a class="header-anchor" href="#预期实现效果如下图所示">¶</a>预期实现效果如下图所示</h6><blog src="./blog/clock——init.png" width="250"><blog src="./blog/clock——working.png" width="250"><blog src="./blog/clock——resting.png" width="250"><blog src="./blog/worked.png" width="250"><blockquote><p>这里设定了一个计时器，timefn()函数控制了计时的开始，pauseFn()函数控制了计时的结束</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">timeFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  is_pause.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">  timer = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">clock</span>()</span><br><span class="line">    <span class="keyword">if</span> (minutes.<span class="property">value</span> &lt;= <span class="number">0</span> &amp;&amp; seconds.<span class="property">value</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      state.<span class="property">value</span> = <span class="title class_">State</span>.<span class="property">Init</span>;<span class="comment">//设置初始状态</span></span><br><span class="line">      count=<span class="number">1</span>;<span class="comment">//后期用的计算轮数的变量，可以先忽略</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(count);</span><br><span class="line">      <span class="title function_">pauseFn</span>();</span><br><span class="line">      <span class="title function_">vue_count</span>();<span class="comment">//向后端传轮数的函数，可以先忽略</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (seconds.<span class="property">value</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        seconds.<span class="property">value</span> = <span class="number">60</span>;</span><br><span class="line">        minutes.<span class="property">value</span>--;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        seconds.<span class="property">value</span>--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//暂停倒计时</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pauseFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">  is_pause.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>如果想要网页上提醒用户现在的状态，使用computed是非常方便的选择，参考代码如下：</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> filled_minute = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="title function_">fill</span>(minutes));</span><br><span class="line"><span class="keyword">const</span> filled_second = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="title function_">fill</span>(seconds));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> message_state = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="title function_">message</span>());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fill</span>(<span class="params">in_num: Ref&lt;<span class="built_in">number</span>&gt;</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (in_num.<span class="property">value</span> &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> in_num.<span class="property">value</span>.<span class="title function_">toString</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;0&quot;</span> + in_num.<span class="property">value</span>.<span class="title function_">toString</span>();<span class="comment">//当倒计时到个位数时自动补零</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unction <span class="title function_">click</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (minutes.<span class="property">value</span> &lt;= <span class="number">0</span> &amp;&amp; seconds.<span class="property">value</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    minutes.<span class="property">value</span> = <span class="number">30</span>;<span class="comment">//当倒计时结束重新启动时把时间补回30分钟</span></span><br><span class="line">    seconds.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="title function_">timeFn</span>();</span><br><span class="line">    </span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">timeFn</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>绑定到网页上的按钮（template标签内）：</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; height: 100px;clear: both;text-align: center;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20%;margin-left: 65px;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;click&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20%;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;pauseFn&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>现在是&#123;&#123; message_state &#125;&#125;时间哦~<span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><blockquote><p>接下来是一些附加的功能，主要是注册登录和获取排行榜信息。预期实现效果如下图<br>使用没有注册过的账号登录，页面提示账号不存在以后进行注册：</p></blockquote><p><img src="/2023/09/04/%E6%B5%8B%E8%AF%95/null.png" width="250" height="200"><img src="/2023/09/04/%E6%B5%8B%E8%AF%95/register.png " width="250" height="200"></p><p>注册成功以后登录：<br><img src="/2023/09/04/%E6%B5%8B%E8%AF%95/login.png" width="250" height="200"></p><p>当密码错误时进行提示：<img src="/2023/09/04/%E6%B5%8B%E8%AF%95/login_fail.png" width="250" height="200"></p><h4 id="注册登录的参考代码如下"><a class="header-anchor" href="#注册登录的参考代码如下">¶</a>注册登录的参考代码如下:</h4><p>vue（script标签中）内代码：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求</span></span><br><span class="line"><span class="keyword">const</span> aa = <span class="title function_">ref</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">register</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;http://localhost:8888/register&quot;</span>, <span class="comment">//使用axios向后端发送请求</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">user_id</span>: user.<span class="property">value</span>,</span><br><span class="line">    <span class="attr">password</span>: password.<span class="property">value</span>,<span class="comment">//发送了账号密码</span></span><br><span class="line">    </span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123; <span class="comment">// 如果成功执行</span></span><br><span class="line">    aa.<span class="property">value</span> = res.<span class="property">data</span><span class="comment">//返回值是一个字符串“注册成功”</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//登录</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;http://localhost:8888/login&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">user_id</span>: user.<span class="property">value</span>,</span><br><span class="line">    <span class="attr">password</span>: password.<span class="property">value</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123; <span class="comment">// 如果成功执行</span></span><br><span class="line">    aa.<span class="property">value</span> = res.<span class="property">data</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">vue_top</span>();<span class="comment">//后期获取排行榜使用的函数，可以先忽略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>vue（template标签中）内</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;widows: 80px;height: 80px;clear: both;&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;user&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请在此输入账号/用户名&quot;</span> /&gt;</span></span></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请在此输入密码哦&quot;</span> <span class="attr">show-password</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20%;margin-left: 65px;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20%;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;register&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-text</span> <span class="attr">class</span>=<span class="string">&quot;mx-1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>&#123;&#123; aa &#125;&#125;<span class="tag">&lt;/<span class="name">el-text</span>&gt;</span></span></span><br><span class="line">      </span><br></pre></td></tr></table></figure><h4 id="后端python出场啦"><a class="header-anchor" href="#后端python出场啦">¶</a>后端python出场啦</h4><blockquote><p>后端python中参考代码：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3 <span class="comment">#数据库用的sqlite3哦，记得自己在命令行里创建数据库</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> fastapi.middleware.cors <span class="keyword">import</span> CORSMiddleware <span class="comment"># 用来支持跨域</span></span><br><span class="line"><span class="keyword">import</span> uvicorn <span class="comment"># 相当于服务器的启动器</span></span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel <span class="comment"># 用来定义POST请求接受的类型</span></span><br><span class="line"></span><br><span class="line">app = FastAPI() <span class="comment"># 定义后端服务器 </span></span><br><span class="line"><span class="comment"># 搜索关键词“跨域”，因为前端和后端不在同一个端口，所以为了安全，默认禁止互相访问，为了互相访问，我们需要跨域</span></span><br><span class="line"><span class="comment"># 参考 https://blog.csdn.net/moshowgame/article/details/107285660</span></span><br><span class="line">app.add_middleware(</span><br><span class="line">CORSMiddleware,</span><br><span class="line"><span class="comment"># 允许跨域的源列表，例如 [&quot;http://www.example.org&quot;] 等等，[&quot;*&quot;] 表示允许任何源</span></span><br><span class="line">allow_origins=[<span class="string">&quot;*&quot;</span>],</span><br><span class="line"><span class="comment"># 跨域请求是否支持 cookie，默认是 False，如果为 True，allow_origins 必须为具体的源，不可以是 [&quot;*&quot;]</span></span><br><span class="line">allow_credentials=<span class="literal">False</span>,</span><br><span class="line"><span class="comment"># 允许跨域请求的 HTTP 方法列表，默认是 [&quot;GET&quot;]</span></span><br><span class="line">allow_methods=[<span class="string">&quot;*&quot;</span>],</span><br><span class="line"><span class="comment"># 允许跨域请求的 HTTP 请求头列表，默认是 []，可以使用 [&quot;*&quot;] 表示允许所有的请求头</span></span><br><span class="line"><span class="comment"># 当然 Accept、Accept-Language、Content-Language 以及 Content-Type 总之被允许的</span></span><br><span class="line">allow_headers=[<span class="string">&quot;*&quot;</span>],</span><br><span class="line"><span class="comment"># 可以被浏览器访问的响应头, 默认是 []，一般很少指定</span></span><br><span class="line"><span class="comment"># expose_headers=[&quot;*&quot;]</span></span><br><span class="line"><span class="comment"># 设定浏览器缓存 CORS 响应的最长时间，单位是秒。默认为 600，一般也很少指定</span></span><br><span class="line"><span class="comment"># max_age=1000</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">#注释源自世界上最好的看我写不出来代码给我写了一份demo的好朋友，我自己写的注释离奇消失，直接把demo里的拿来用啦</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义接收的对象</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RegisterInfo</span>(<span class="title class_ inherited__">BaseModel</span>):</span><br><span class="line">    user_id: <span class="built_in">str</span></span><br><span class="line">    password: <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/register&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">info: RegisterInfo</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;/register: User(id:<span class="subst">&#123;info.user_id&#125;</span>) registered.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 链接数据库</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功连接数据库&quot;</span>)</span><br><span class="line">    <span class="comment"># 向表中添加账号密码</span></span><br><span class="line"></span><br><span class="line">    x: <span class="built_in">tuple</span>[<span class="built_in">int</span>] = c.execute(</span><br><span class="line">        <span class="string">&quot;select count(*) from user where id=?&quot;</span>, (info.user_id,)).fetchone()</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    <span class="comment"># 注册</span></span><br><span class="line">    n = x[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已有账号&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已有账号，请登录哦&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c.execute(<span class="string">&quot;INSERT INTO USER (id, password,count) VALUES (?, ?,0)&quot;</span>,</span><br><span class="line">                  (info.user_id, info.password))</span><br><span class="line">        conn.commit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;数据插入成功&quot;</span>)</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;注册成功~&quot;</span></span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/login&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">info: RegisterInfo</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;/login: User(id:<span class="subst">&#123;info.user_id&#125;</span>) registered.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 链接数据库</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功连接数据库&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 验证账号是否存在</span></span><br><span class="line">    uid: <span class="built_in">tuple</span>[<span class="built_in">int</span>] = c.execute(</span><br><span class="line">        <span class="string">&quot;select count(*) from user where id=?&quot;</span>, (info.user_id,)).fetchone()</span><br><span class="line">    ps = c.execute(<span class="string">&quot;select count(*) from user where password=?&quot;</span>,</span><br><span class="line">                   (info.password,)).fetchone()</span><br><span class="line">    cuid = uid[<span class="number">0</span>]</span><br><span class="line">    cps = ps[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> cuid &gt; <span class="number">0</span> <span class="keyword">and</span> cps &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> cuid &gt; <span class="number">0</span> <span class="keyword">and</span> cps == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;cw&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;密码错误&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> cuid == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;bcz&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;账号不存在&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行fastapi程序，定式（记得放底部哦）</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  uvicorn.run(app=<span class="string">&quot;main:app&quot;</span>, host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">8888</span>, reload=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h4 id="最后是排行榜功能，可以往前翻看计时器中的代码，轮数已经定义，所以接下来显示的参考代码需要结合计时器内代码一起使用哦"><a class="header-anchor" href="#最后是排行榜功能，可以往前翻看计时器中的代码，轮数已经定义，所以接下来显示的参考代码需要结合计时器内代码一起使用哦">¶</a>最后是排行榜功能，可以往前翻看计时器中的代码，轮数已经定义，所以接下来显示的参考代码需要结合计时器内代码一起使用哦~</h4><img src="/2023/09/04/%E6%B5%8B%E8%AF%95/top.png" width="400"><blockquote><p>vue中（script）代码：</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//向后端传递番茄钟轮数</span></span><br><span class="line"> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">vue_count</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">let</span> res =<span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;http://localhost:8888/count&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">user_id</span>: user.<span class="property">value</span>,</span><br><span class="line">      <span class="attr">password</span>: password.<span class="property">value</span>,</span><br><span class="line">      <span class="attr">count</span>: count</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>) &#123; <span class="comment">// 如果成功执行</span></span><br><span class="line">        msg.<span class="property">value</span> = res.<span class="property">data</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//获取排行榜内容</span></span><br><span class="line"><span class="keyword">const</span> tableData=<span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">vue_top</span>(<span class="params"></span>)<span class="comment">//被放入登录函数内，在登录的同时拉取到排行榜</span></span><br><span class="line"> &#123;</span><br><span class="line">      <span class="keyword">let</span> res=<span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&quot;http://localhost:8888/top&quot;</span>)</span><br><span class="line">      <span class="keyword">if</span>(res.<span class="property">status</span>==<span class="number">200</span>)&#123;</span><br><span class="line">        tableData.<span class="property">value</span>=res.<span class="property">data</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>vue中（template）代码：</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;color: lightpink; font-size: 30px; height: 800px; width: 200px;&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span>&gt;</span>排行榜内容<span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span></span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;id&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;count&quot;</span> <span class="attr">label</span>=<span class="string">&quot;count&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>python内代码</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加轮数</span></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/count&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">info: countInfo</span>):</span><br><span class="line">    <span class="comment"># print(f&quot;/count: User(id:&#123;info.user_id&#125;) registered.&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 链接数据库</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功连接数据库&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># sql添加</span></span><br><span class="line">    n = c.execute(<span class="string">&quot;select count from user where id=?&quot;</span>,(info.user_id,)).fetchone()</span><br><span class="line">    n_count=n[<span class="number">0</span>]</span><br><span class="line">    c.execute(<span class="string">&quot;update user set count=?+? where id=?&quot;</span>, ( info.count,n_count,info.user_id))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功添加轮数&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;成功完成一次~&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取排行榜内容</span></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/top&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">top</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;/top:接收到信息&quot;</span>)</span><br><span class="line"></span><br><span class="line">     <span class="comment"># 链接数据库</span></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line">    c = conn.cursor()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功连接数据库&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#按照count降序查询用户名和count</span></span><br><span class="line">    tabledata=[]</span><br><span class="line">    </span><br><span class="line">    top_list= c.execute(<span class="string">&quot;select id,count from user order by count desc&quot;</span>).fetchall()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> top_list:</span><br><span class="line">        data_item=&#123;&#125;</span><br><span class="line">        data_item[<span class="string">&quot;id&quot;</span>]=data[<span class="number">0</span>]</span><br><span class="line">        data_item[<span class="string">&quot;count&quot;</span>]=data[<span class="number">1</span>]</span><br><span class="line">        tabledata.append(data_item)</span><br><span class="line">    <span class="built_in">print</span>(tabledata)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功获取排行榜&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">return</span> tabledata</span><br></pre></td></tr></table></figure><blockquote><p>以上就是全部内容啦，感谢观看~</p></blockquote></blog></blog></blog></blog>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;日期-2023-09-01-02-51-26&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#日期-2023-09-01-02-51-26&quot;&gt;¶&lt;/a&gt;日期: 2023-09-01 02:51:26&lt;/h5&gt;
&lt;h3 id=&quot;网页整体如下：&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>周报-2023.09.04</title>
    <link href="http://likeyukiyuki.github.io/2023/09/04/%E5%91%A8%E6%8A%A5/"/>
    <id>http://likeyukiyuki.github.io/2023/09/04/%E5%91%A8%E6%8A%A5/</id>
    <published>2023-09-04T12:52:09.000Z</published>
    <updated>2023-09-04T16:36:09.872Z</updated>
    
    <content type="html"><![CDATA[<p>这份周报记录的是上周的工作内容，由于一些原因今天才写成。</p><h1>上周的主要工作内容是</h1><ol><li>将番茄钟彻底完工收尾</li><li>搭建了个人博客</li><li>将番茄钟的相关内容写成文档上传到博客上</li></ol><h2 id="番茄钟收尾中遇到的问题"><a class="header-anchor" href="#番茄钟收尾中遇到的问题">¶</a>番茄钟收尾中遇到的问题</h2><h4 id="调试方面"><a class="header-anchor" href="#调试方面">¶</a>调试方面</h4><p>在之前编写的过程中都没有进行过断点调试，后来尝试在后端进行断点调试的时候遇到了一些问题。<br>首先是在vscode中断点调试也是在需要进行断点的代码行旁进行断点添加，然后在运行调试即可。<br>而我始终开始运行调试后始终没有响应，后来发现是因为一开始已经启动了后端，而进行调试的时候又启动了一次后端，等于在调试时有两个后端，因此前端发送的请求并没有被当前调试的后端接受到，所以就一直没有反应。<br>其次是在调试后端时如果需要触发断点需要前端发送的请求，所以在前端也必须进行相应的操作对后端发送请求才行。</p><h4 id="代码部分-增加轮数"><a class="header-anchor" href="#代码部分-增加轮数">¶</a>代码部分-增加轮数</h4><p>一开始我的想法是定义一个变量count，当一轮计数结束时count++。但是一开始把它添加进了click函数（此函数由点击开始按钮触发）里。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">click</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (minutes.<span class="property">value</span> &lt;= <span class="number">0</span> &amp;&amp; seconds.<span class="property">value</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    minutes.<span class="property">value</span> = <span class="number">30</span>;</span><br><span class="line">    seconds.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="title function_">timeFn</span>();</span><br><span class="line">    <span class="comment">// msg.value=count.toString()</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">timeFn</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>造成的结果是我无论运行了几轮，count始终等于1。后来经过朋友的提醒我才想到count这种计数的变量应该加入计时器timefn函数中，而不是需要点击才会触发的click函数里，由此解决了问题。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">timeFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  is_pause.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">  timer = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">clock</span>()</span><br><span class="line">    <span class="keyword">if</span> (minutes.<span class="property">value</span> &lt;= <span class="number">0</span> &amp;&amp; seconds.<span class="property">value</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      state.<span class="property">value</span> = <span class="title class_">State</span>.<span class="property">Init</span>;</span><br><span class="line">      count=<span class="number">1</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(count);</span><br><span class="line">      <span class="title function_">pauseFn</span>();</span><br><span class="line">      <span class="title function_">vue_count</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (seconds.<span class="property">value</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        seconds.<span class="property">value</span> = <span class="number">60</span>;</span><br><span class="line">        minutes.<span class="property">value</span>--;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        seconds.<span class="property">value</span>--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>番茄钟里的问题就到此为止啦。</p><h2 id="搭建个人博客时遇到的问题"><a class="header-anchor" href="#搭建个人博客时遇到的问题">¶</a>搭建个人博客时遇到的问题</h2><p>我采用的是hexo加git，一开始参照教程一路走下来挺顺畅的（其实也不是，但是主要问题都是由于没有认真看教程的锅，下次一定要认真看教程），但是当配置主题出现问题的时候想要利用git恢复版本却发现了问题。</p><h4 id="源代码并没有被git管理"><a class="header-anchor" href="#源代码并没有被git管理">¶</a>源代码并没有被git管理</h4><p>当我遇到问题想要恢复版本时发现，git管理的是hexo生成的网页文件，源代码并没有被git管理，而网页文件恰恰是依靠源代码进行生成的，于是我在尝试过多种方法解决无果之后重新搭建了一次，在搭建成功后立刻在git上创建分支将源代码提交到新分支进行管理。</p><h2 id="将写好的文档放入博客时遇到的问题"><a class="header-anchor" href="#将写好的文档放入博客时遇到的问题">¶</a>将写好的文档放入博客时遇到的问题</h2><p>其实第一篇番茄钟放入博客时非常顺利，唯一的问题是图片不能正常显示。但是在后面我想使用插件让图片可以正常显示时发生了问题，下载完插件后进行本地运行，博客主页显示”cannot get/“ 在网上查询解决方案后开始排查问题。</p><ol><li>source/posts里没有放md文件<br>不成立，一开始就放入写了番茄钟的md文件了</li><li>public里的index.html文件为0kb<br>我去检查了public文件内的index.html文件，发现根本不存在。</li><li>public里没有index.html文件<br>看来就是这个原因了<br>然后这时朋友帮忙远程解决了问题，网页正常显示了。虽然图片的问题还没解决，但我想先暂时把周报写完再继续搞图片的问题，就在我生成新文章时，网页出现“cannot get/”的事情又发生了。<br>最后弄了半天终于解决，以下是朋友帮忙解决后总结的思路：</li><li>我们只做了少量的修改却导致严重问题 -&gt; 问题出在git版本管理之外的文件</li><li>我们仔细检查了hexo的配置 -&gt; 不太可能是hexo配置或文件出错</li><li>public内任何html文件没有正确生成 -&gt; 可能是markdown转html的步骤出错<br>再进一步思考</li><li>1-&gt; git管理之外的文件，deploy、public这些是动态生成的，肯定不会是他们的问题，node_modules是根据package.json生成的，如果有问题，说明两个都有问题</li><li>2-&gt; 说明hexo确实没问题</li><li>3-&gt; 说明可能是md转html的渲染器问题<br>因此，可以得出结论，是之前自己操作时(或者hexo在默认情况下)，没有把必要的md转html渲染器放到 package.json 中，也就是 npm install 时没有加 --save参数，导致这个插件存在于 node_modules 文件夹内（因为我们最开始能运行），但是在进行了npm操作后，由于这个插件不在 package.json 中，被npm卸载了。</li><li>&quot;npm install 名称&quot;只是下载这个插件</li><li>&quot;npm install --save 名称&quot;是下载这个插件并且存入package.json</li><li>而&quot;npm install&quot;是把本地的 node_modules 按照 package.json 进行修改<br>因此，没有save的情况下下载后，再进行npm操作，就可能会把下载的插件卸载掉。在重新下载了必要插件，并且用save保存到了package.json中以后这个问题就圆满解决啦。</li></ol><h2 id="本周的计划"><a class="header-anchor" href="#本周的计划">¶</a>本周的计划</h2><h4 id="1-学习Linux操作系统"><a class="header-anchor" href="#1-学习Linux操作系统">¶</a>1.学习Linux操作系统</h4><p>初步了解并且学会使用相关命令。</p><h4 id="2-解决博客不显示图片的问题"><a class="header-anchor" href="#2-解决博客不显示图片的问题">¶</a>2.解决博客不显示图片的问题</h4><h2 id="这个问题也算是存在许久了，本周一定要解决掉"><a class="header-anchor" href="#这个问题也算是存在许久了，本周一定要解决掉">¶</a>这个问题也算是存在许久了，本周一定要解决掉</h2><p>目前想法就这些了，希望这周的计划可以顺利进行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这份周报记录的是上周的工作内容，由于一些原因今天才写成。&lt;/p&gt;
&lt;h1&gt;上周的主要工作内容是&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;将番茄钟彻底完工收尾&lt;/li&gt;
&lt;li&gt;搭建了个人博客&lt;/li&gt;
&lt;li&gt;将番茄钟的相关内容写成文档上传到博客上&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=</summary>
      
    
    
    
    
  </entry>
  
</feed>
